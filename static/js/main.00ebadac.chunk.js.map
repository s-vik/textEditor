{"version":3,"sources":["assets/images/logo.svg","components/Header/Header.jsx","components/content/form/MakeOrder/MakeOrder.jsx","components/content/form/Language/ChooseLanguage.jsx","components/content/form/Feedback/Feedback.jsx","components/content/form/OrderCard/OrderCard.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","href","title","src","logo","MakeOrder","required","type","placeholder","onChange","quantitySymbols","ChooseLanguage","onClick","languageHandler","id","name","value","htmlFor","Feedback","OrderCard","totalPrice","deadLine","disabled","language","Footer","App","priceOptions","useState","setQuantitySymbols","setLanguage","setDeadLine","setTotalPrice","useEffect","workTime","symbolsPerHour","minimumCost","Math","ceil","pricePerSing","moment","tz","getDeadlineDate","format","date","work","workMinutes","parseInt","workDays","temp","day","add","hour","minutes","hours","days","isoWeekday","addWeekdays","onSubmit","event","preventDefault","e","target","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00ebadac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7145a702.svg\";"," import React from 'react';\r\n import logo from '../../assets/images/logo.svg';\r\n import './header.css';\r\n \r\n \r\n const Header = (props) => {\r\n    return(<header>\r\n        <div className='header_container'>\r\n          <a href='#' className='logo'><img title='logo' src={logo} /></a>\r\n          <ul className='menu'>\r\n            <a href='#'><li>Про нас</li></a>\r\n            <a href='#'><li>Ціни</li></a>\r\n            <a href='#'><li>Редактори</li></a>\r\n            <a href='#'><li>Блог</li></a>\r\n          </ul>\r\n          <button className={'check_button' + ' hover_button'}>Перевірити текст</button>\r\n        </div>\r\n      </header>)\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport './make_order.css';\r\n\r\nconst MakeOrder = (props) => {\r\n    return(<section className='make_order'>\r\n    <h3 className='make_order_title'>ЗАМОВИТИ РЕДАГУВАННЯ</h3>\r\n    <p>Виправимо всі помилки, приберемо всі дурниці, перефразуємо невдалі місця, але сильно текст <span className='no_wrap'> не переписуватимемо.</span>  Зайвих виправлень не буде. <a className='act_link' href='#'>Детальніше про редагування</a></p>\r\n    <div className = 'requiredField'>\r\n    <input required type='text' className='form_field' placeholder='Ваша эл. почта'/>\r\n    </div>\r\n    <input type='text' className='form_field' placeholder='Ваше имя' />\r\n    <div className='form_textarea_container'>\r\n    <textarea className={'form_textarea' + ' form_field'} onChange={props.onChange} placeholder='Уведіть текст'/>\r\n    <div className='quantity_symbols' >{props.quantitySymbols}</div>\r\n    </div>\r\n    </section>)\r\n}\r\n\r\nexport default MakeOrder;","import React from 'react';\r\nimport './language.css';\r\n\r\nconst ChooseLanguage = (props) => {\r\n    return( <section className='language'>\r\n    <h3>МОВА</h3>\r\n  <div className = 'choice_language'>\r\n   <div className = 'language_button'>\r\n   <input onClick = {props.languageHandler} type='radio' id='ua'\r\n    name='language' value='Українська'/>\r\n    <label htmlFor='ua'>Українська</label>\r\n   </div>\r\n\r\n    <div className = 'language_button'>\r\n    <input onClick = {props.languageHandler} type='radio' id='ru'\r\n    name='language' value='Російська'/>\r\n    <label htmlFor=\"ru\">Російська</label>\r\n    </div>\r\n\r\n    <div className = 'language_button'>\r\n    <input onClick = {props.languageHandler} type='radio' id='eng'\r\n    name='language' value='Англійська'/>\r\n    <label htmlFor='eng'>Англійська</label>\r\n    </div>\r\n</div>\r\n  </section>)\r\n}\r\n\r\nexport default ChooseLanguage;","import React from 'react';\r\n\r\nconst Feedback = (props) => {\r\n    return(<section>\r\n        <input type='text' className='form_field' placeholder='Стислий коментар або покликання' />\r\n        </section>)\r\n}\r\nexport default Feedback;","import React from 'react';\r\nimport './order_card.css';\r\n\r\nconst OrderCard = (props) => {\r\n    return( <div className='order_container'>\r\n    <div className='order'>\r\n      <div className='price_container'>\r\n        <div className='total_price'> {props.totalPrice} грн</div>\r\n        <div className='deadline'>{props.deadLine === 0? null:props.deadLine}</div>\r\n      </div>\r\n      <button disabled={!props.language} className={'calculate_button' + ' hover_button'}>Замовити</button>\r\n    </div>\r\n  </div>)\r\n}\r\nexport default OrderCard;","import React from 'react';\r\nimport './footer.css';\r\n\r\nconst Footer = (props) => {\r\n    return(<footer>\r\n        <nav className='footer_nav'>\r\n        <ul>\r\n          <li><a href='#'>Facebook</a></li>\r\n          <li><a href='#'>manager@correctarium.com</a></li>\r\n        </ul>\r\n        </nav>\r\n        <div className='language_switcher'>\r\n          <button className='lang_item'>Українська</button>\r\n          <button className='lang_item'>Русский</button>\r\n        </div>\r\n        </footer>)\r\n}\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport moment from 'moment-timezone';\nimport Header from './components/Header/Header';\nimport MakeOrder from './components/content/form/MakeOrder/MakeOrder';\nimport ChooseLanguage from './components/content/form/Language/ChooseLanguage';\nimport Feedback from './components/content/form/Feedback/Feedback';\nimport OrderCard from './components/content/form/OrderCard/OrderCard';\nimport Footer from './components/Footer/Footer';\n\nconst App = () => {\n  const priceOptions = {\n    'ua': {\n      'symbolsPerHour': 1333,\n      'pricePerSing': 0.05,\n      'minimumCost': 50\n    },\n    'ru': {\n      'symbolsPerHour': 1333,\n      'pricePerSing': 0.05,\n      'minimumCost': 50\n    },\n    'eng': {\n      'symbolsPerHour': 333,\n      'pricePerSing': 0.12,\n      'minimumCost': 120\n    }\n  }\n  const [quantitySymbols, setQuantitySymbols] = useState(0);\n  const [language, setLanguage] = useState(null);\n  const [deadLine, setDeadLine] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    let workTime;\n    if (language !== null) {\n      workTime = quantitySymbols < language.symbolsPerHour ? 1 : (quantitySymbols / language.symbolsPerHour) + .5;\n      setTotalPrice(language.minimumCost > Math.ceil(quantitySymbols * language.pricePerSing) ?\n        language.minimumCost : Math.ceil(quantitySymbols * language.pricePerSing));\n      if (quantitySymbols === 0) {\n        setDeadLine(0);\n        setTotalPrice(0);\n        return;\n      }\n      setDeadLine(moment.tz(getDeadlineDate(moment(), workTime), 'Europe/Kiev').format('Термін виконання: DD.MM.YY o H:mm'));\n    }\n  }, [language, quantitySymbols])\n\n  const submit = (event) => {\n    event.preventDefault();\n  }\n  const languageHandler = (e) => {\n    setLanguage(priceOptions[e.target.id]);\n  }\n  const addWeekdays = (date, days) => {\n    date = moment(date);\n    while (days > 0) {\n      date = date.add(1, 'days');\n      if (date.isoWeekday() !== 6 && date.isoWeekday() !== 7) {\n        days -= 1;\n      }\n    }\n    return date;\n  }\n  const getDeadlineDate = (date, work) => {\n    let workTime = work,\n        workHours = parseInt(workTime),\n        workMinutes = workTime - workHours,\n        workDays = 0,\n        temp = moment(date);\n    while (work >= 9) {\n      work -= 9;\n      workDays += 1;\n    }\n    if (temp.day() === 6) {\n      temp.add(2, 'days');\n      temp.hour(10 + work);\n      temp.minutes(workMinutes * 60);\n    } \n    else\n    if (temp.day() === 0) {\n      temp.add(1, 'days');\n      temp.hour(10 + work);\n      temp.minutes(workMinutes * 60);\n    } else {\n      temp.hour(temp.hour() + work);\n      temp.minutes(temp.minutes() + workMinutes * 60);\n    }\n  \n    if (temp.hour() >= 19) {\n      workDays += 1;\n      temp.hour(temp.hour() - 19 + 10);\n      temp.minutes(workMinutes * 60);\n    } else if (temp.hour() < 10) {\n      temp.hour(10 + work);\n      temp.minutes(workMinutes * 60);\n    }\n    if (temp.minutes() < 15) {\n      temp.minutes(0);\n    } else if (temp.minutes() < 45) {\n      temp.minutes(30);\n    } else if (temp.minutes() < 60) {\n      temp.minutes(0);\n      temp.hours((temp.hours() + 1) % 24)\n    }\n    return temp = addWeekdays(temp, workDays) ;\n  }\n  const onChange = (e) => {\n    setQuantitySymbols(e.target.value.length);\n  }\n  return (\n    <div className='App'>\n      <Header />\n      <main className='grid'>\n        <div className='content'>\n          <form name='makeOrder' onSubmit={submit} className='calculate_price_form'>\n            <div className='calculate_price_sections'>\n              <MakeOrder onChange={onChange} quantitySymbols={quantitySymbols} />\n              <ChooseLanguage languageHandler={languageHandler} />\n              <Feedback />\n            </div>\n            <OrderCard totalPrice={totalPrice} deadLine={deadLine} language={language} />\n          </form>\n        </div>\n        <Footer />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}